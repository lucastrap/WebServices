openapi: 3.0.0
info:
  title: WebServices API
  version: 1.0.0
  description: Documentation minimale pour l'API versionnée (v1, v2)
servers:
  - url: http://localhost:3000
paths:
  /api/v1/books:
    get:
      summary: Liste des livres (v1)
      responses:
        '200':
          description: Liste de livres
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BooksList'
    post:
      summary: Créer un livre (v1)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Livre créé
  /api/v1/books/{id}:
    get:
      summary: Obtenir un livre par id (v1)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Livre
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not found
    put:
      summary: Modifier un livre (v1)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Livre modifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not found
    delete:
      summary: Supprimer un livre (v1)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Livre supprimé
        '404':
          description: Not found
  /api/v2/books:
    get:
      summary: Liste des livres (v2)
      responses:
        '200':
          description: Liste de livres
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BooksList'
    post:
      summary: Créer un livre (v2)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Livre créé
  /api/v2/books/{id}:
    get:
      summary: Obtenir un livre par id (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Livre
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not found
    put:
      summary: Modifier un livre (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Livre modifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not found
    delete:
      summary: Supprimer un livre (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Livre supprimé
        '404':
          description: Not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        _links:
          type: object
    BooksList:
      type: object
      properties:
        _links:
          type: object
        count:
          type: integer
        _embedded:
          type: object
          properties:
            books:
              type: array
              items:
                $ref: '#/components/schemas/Book'
    BookInput:
      type: object
      required:
        - title
        - author
      properties:
        title:
          type: string
        author:
          type: string
